<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd   http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

    <description>This is the relational database configuration for the applications.</description>

    <bean id="jdbcPropertyPlaceHolder" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="location" value="classpath:/jdbc.properties"/>
    </bean>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="url" value="${database.url}" />
        <property name="username" value="${database.user}" />
        <property name="password" value="${database.password}" />

        <property name="filters" value="${database.filters}" />

        <property name="maxActive" value="${database.maxActive}" />
        <property name="initialSize" value="${database.initialSize}" />
        <property name="maxWait" value="${database.maxWait}" />
        <property name="minIdle" value="${database.minIdle}" />

        <property name="timeBetweenEvictionRunsMillis" value="${database.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${database.minEvictableIdleTimeMillis}" />

        <property name="validationQuery" value="${database.validationQuery}" />
        <property name="testWhileIdle" value="${database.testWhileIdle}" />
        <property name="testOnBorrow" value="${database.testOnBorrow}" />
        <property name="testOnReturn" value="${database.testOnReturn}" />
        <property name="poolPreparedStatements" value="${database.poolPreparedStatements}" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${database.maxPoolPreparedStatement}" />
    </bean>

    <!-- 配置platform transaction manager-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean> 

    <!-- 声明式事物管理，配置事物管理advice-->
     <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>

            <tx:method name="get*" read-only="true"/>
<tx:method name="test*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice> 

    <!-- 配置事物管理advice作用范围与作用条件-->
    <aop:config>
        <aop:pointcut id="serviceLayerTransaction" expression="execution( * foo.service.*..*(..))"/>
        <aop:advisor pointcut-ref="serviceLayerTransaction" advice-ref="txAdvice"/>
    </aop:config> 

     
</beans>
